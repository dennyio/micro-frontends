{"version":3,"file":"commons-lib.mjs","sources":["../../../projects/commons-lib/src/lib/commons-lib.service.ts","../../../projects/commons-lib/src/lib/loading/loading.service.ts","../../../projects/commons-lib/src/lib/loading/loading.component.ts","../../../projects/commons-lib/src/lib/loading/loading.component.html","../../../projects/commons-lib/src/lib/messages/messages.service.ts","../../../projects/commons-lib/src/lib/messages/messages.component.ts","../../../projects/commons-lib/src/lib/messages/messages.component.html","../../../projects/commons-lib/src/lib/pipes/safe-url.pipe.ts","../../../projects/commons-lib/src/lib/commons-lib.module.ts","../../../projects/commons-lib/src/public-api.ts","../../../projects/commons-lib/src/commons-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonsLibService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { concatMap, finalize, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingService {\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n\n  public loading$: Observable<boolean> = this.loadingSubject.asObservable();\n\n  constructor() {\n    console.log('Loading service created ...');\n  }\n\n  showLoaderUntilCompleted<T>(obs$: Observable<T>): Observable<T> {\n    return of(null).pipe(\n      tap(() => this.loadingOn()),\n      concatMap(() => obs$),\n      finalize(() => this.loadingOff())\n    );\n  }\n\n  loadingOn() {\n    this.loadingSubject.next(true);\n  }\n\n  loadingOff() {\n    this.loadingSubject.next(false);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoadingService } from './loading.service';\n\n@Component({\n  selector: 'loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css'],\n})\nexport class LoadingComponent implements OnInit {\n  constructor(public loadingService: LoadingService) {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"spinner-container\" *ngIf=\"loadingService.loading$ | async\">\n  <mat-spinner></mat-spinner>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable()\nexport class MessagesService {\n  private subject = new BehaviorSubject<string[]>([]);\n\n  errors$: Observable<string[]> = this.subject\n    .asObservable()\n    .pipe(filter((messages) => messages && messages.length > 0));\n\n  showErrors(...errors: string[]) {\n    this.subject.next(errors);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { tap } from 'rxjs/operators';\nimport { MessagesService } from './messages.service';\n\n@Component({\n  selector: 'messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css'],\n})\nexport class MessagesComponent implements OnInit {\n  public showMessages = false;\n\n  public errors$!: Observable<string[]>;\n\n  constructor(public messagesService: MessagesService) {\n    console.log('Created messages component');\n  }\n\n  ngOnInit() {\n    this.errors$ = this.messagesService.errors$.pipe(\n      tap(() => (this.showMessages = true))\n    );\n  }\n\n  public onClose() {\n    this.showMessages = false;\n  }\n}\n","<ng-container *ngIf=\"errors$ | async as errors\">\n  <div class=\"messages-container\" *ngIf=\"showMessages\">\n    <div class=\"message\" *ngFor=\"let error of errors\">\n      {{ error }}\n    </div>\n\n    <mat-icon class=\"close\" (click)=\"onClose()\">close</mat-icon>\n  </div>\n</ng-container>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeUrl',\n})\nexport class SafeUrlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(url: string) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { LoadingComponent } from './loading/loading.component';\nimport { LoadingService } from './loading/loading.service';\nimport { MessagesComponent } from './messages/messages.component';\nimport { MessagesService } from './messages/messages.service';\nimport { SafeUrlPipe } from './pipes/safe-url.pipe';\n\n@NgModule({\n  declarations: [    \n    LoadingComponent,\n    MessagesComponent,\n    SafeUrlPipe,\n  ],\n  imports: [CommonModule, MatProgressSpinnerModule, MatIconModule],\n  exports: [\n    LoadingComponent,\n    MessagesComponent,\n    SafeUrlPipe,\n  ],\n  providers: [LoadingService, MessagesService],\n})\nexport class CommonsLibModule {}\n","/*\n * Public API Surface of commons-lib\n */\n\nexport * from './lib/commons-lib.service';\nexport * from './lib/commons-lib.module';\nexport * from './lib/loading/loading.component';\nexport * from './lib/loading/loading.service';\nexport * from './lib/messages/messages.component';\nexport * from './lib/messages/messages.service';\nexport * from './lib/pipes/safe-url.pipe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.LoadingService","i1.MessagesService","i3"],"mappings":"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"}